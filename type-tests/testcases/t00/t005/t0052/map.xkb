xkb_keymap {
    xkb_keycodes {
        include "generated"
    };
    xkb_types {
        type "PC_ALT_LEVEL2" {
            modifiers = Mod1;
            map[Mod1] = 2;
        };
    };
    xkb_symbols {
        virtual_modifiers NumLock = Mod2;

        key <h> { [ h, H ], [ hebrew_yod ], [ Cyrillic_ha ], [ s ] };
        key <e> { [ e, E ], [ hebrew_qoph ], [ Cyrillic_ie ], [ l ] };
        key <k> { [ k, K ], [ hebrew_lamed ], [ Cyrillic_ka ], [ r ] };
        key <f> { [ f, F ], [ hebrew_kaph ], [ Cyrillic_ef ], [ e ] };
        key <o> { [ o, O ], [ hebrew_finalmem ], [ Cyrillic_o ], [ f ] };
        key <l> { [ l, L ], [ hebrew_finalkaph ], [ Cyrillic_el ], [ t ] };
        key <compose> { [ LockGroup(group = +1) ] };
        key <leftshift> {
            type[Group1] = "PC_ALT_LEVEL2",
            type[Group2] = "PC_ALT_LEVEL2",
            type[Group3] = "PC_ALT_LEVEL2",
            [ SetMods(mods = Shift, clearLocks), LockGroup(group = +1) ],
            [ SetMods(mods = Shift, clearLocks), LockGroup(group = +1) ],
            [ SetMods(mods = Shift, clearLocks), LockGroup(group = +1) ],
            [ SetMods(mods = Shift, clearLocks), LockMods(modifiers = Lock) ],
        };
        key <capslock> {
            [ LockMods(mods = Lock) ],
        };
        key <leftalt> {
            [ SetMods(mods = Mod1, clearLocks), LockGroup(group = +1) ],
        };
        key <kp1> {
            [ KP_End, KP_1 ],
        };
        key <kp2> {
            [ KP_Down, KP_1 ],
        };
        key <numlock> {
            [ LockMods(mods = NumLock) ],
        };
    };
};

