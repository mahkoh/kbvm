xkb_keymap {
    xkb_keycodes {
        minimum = 8;
        maximum = 9999999;

        indicator 1 = "DUMMY";

        <1> = 1;
        <10> = 10;
        <100> = 100;
        <101> = 101;
        <102> = 102;
        <104> = 104;
        <105> = 105;
        <106> = 106;
        <107> = 107;
        <108> = 108;
        <109> = 109;
        <11> = 11;
        <110> = 110;
        <111> = 111;
        <112> = 112;
        <113> = 113;
        <114> = 114;
        <115> = 115;
        <116> = 116;
        <117> = 117;
        <118> = 118;
        <119> = 119;
        <12> = 12;
        <121> = 121;
        <122> = 122;
        <123> = 123;
        <124> = 124;
        <125> = 125;
        <126> = 126;
        <127> = 127;
        <128> = 128;
        <129> = 129;
        <13> = 13;
        <130> = 130;
        <131> = 131;
        <133> = 133;
        <134> = 134;
        <135> = 135;
        <136> = 136;
        <137> = 137;
        <138> = 138;
        <139> = 139;
        <14> = 14;
        <140> = 140;
        <141> = 141;
        <142> = 142;
        <143> = 143;
        <144> = 144;
        <145> = 145;
        <146> = 146;
        <147> = 147;
        <148> = 148;
        <15> = 15;
        <150> = 150;
        <151> = 151;
        <152> = 152;
        <153> = 153;
        <155> = 155;
        <156> = 156;
        <157> = 157;
        <158> = 158;
        <159> = 159;
        <16> = 16;
        <160> = 160;
        <161> = 161;
        <162> = 162;
        <163> = 163;
        <164> = 164;
        <165> = 165;
        <166> = 166;
        <167> = 167;
        <169> = 169;
        <17> = 17;
        <170> = 170;
        <171> = 171;
        <172> = 172;
        <173> = 173;
        <174> = 174;
        <175> = 175;
        <176> = 176;
        <177> = 177;
        <179> = 179;
        <18> = 18;
        <180> = 180;
        <181> = 181;
        <182> = 182;
        <185> = 185;
        <186> = 186;
        <187> = 187;
        <188> = 188;
        <189> = 189;
        <19> = 19;
        <190> = 190;
        <191> = 191;
        <192> = 192;
        <193> = 193;
        <194> = 194;
        <195> = 195;
        <196> = 196;
        <198> = 198;
        <199> = 199;
        <2> = 2;
        <20> = 20;
        <200> = 200;
        <201> = 201;
        <203> = 203;
        <204> = 204;
        <205> = 205;
        <206> = 206;
        <207> = 207;
        <208> = 208;
        <209> = 209;
        <21> = 21;
        <210> = 210;
        <211> = 211;
        <212> = 212;
        <213> = 213;
        <214> = 214;
        <215> = 215;
        <216> = 216;
        <218> = 218;
        <22> = 22;
        <220> = 220;
        <221> = 221;
        <223> = 223;
        <224> = 224;
        <225> = 225;
        <226> = 226;
        <227> = 227;
        <228> = 228;
        <229> = 229;
        <23> = 23;
        <231> = 231;
        <232> = 232;
        <233> = 233;
        <234> = 234;
        <235> = 235;
        <236> = 236;
        <237> = 237;
        <238> = 238;
        <239> = 239;
        <24> = 24;
        <240> = 240;
        <241> = 241;
        <242> = 242;
        <243> = 243;
        <244> = 244;
        <245> = 245;
        <246> = 246;
        <247> = 247;
        <249> = 249;
        <25> = 25;
        <250> = 250;
        <251> = 251;
        <252> = 252;
        <253> = 253;
        <254> = 254;
        <255> = 255;
        <256> = 256;
        <26> = 26;
        <27> = 27;
        <28> = 28;
        <29> = 29;
        <30> = 30;
        <31> = 31;
        <32> = 32;
        <33> = 33;
        <34> = 34;
        <35> = 35;
        <36> = 36;
        <366> = 366;
        <37> = 37;
        <372> = 372;
        <379> = 379;
        <38> = 38;
        <380> = 380;
        <382> = 382;
        <383> = 383;
        <39> = 39;
        <397> = 397;
        <40> = 40;
        <400> = 400;
        <401> = 401;
        <405> = 405;
        <41> = 41;
        <410> = 410;
        <411> = 411;
        <418> = 418;
        <419> = 419;
        <42> = 42;
        <424> = 424;
        <425> = 425;
        <426> = 426;
        <427> = 427;
        <428> = 428;
        <429> = 429;
        <43> = 43;
        <430> = 430;
        <431> = 431;
        <432> = 432;
        <433> = 433;
        <434> = 434;
        <435> = 435;
        <436> = 436;
        <437> = 437;
        <438> = 438;
        <439> = 439;
        <44> = 44;
        <440> = 440;
        <441> = 441;
        <442> = 442;
        <443> = 443;
        <444> = 444;
        <445> = 445;
        <446> = 446;
        <447> = 447;
        <448> = 448;
        <449> = 449;
        <45> = 45;
        <450> = 450;
        <452> = 452;
        <453> = 453;
        <454> = 454;
        <46> = 46;
        <47> = 47;
        <472> = 472;
        <473> = 473;
        <48> = 48;
        <49> = 49;
        <493> = 493;
        <50> = 50;
        <505> = 505;
        <506> = 506;
        <507> = 507;
        <508> = 508;
        <509> = 509;
        <51> = 51;
        <510> = 510;
        <511> = 511;
        <512> = 512;
        <513> = 513;
        <514> = 514;
        <52> = 52;
        <520> = 520;
        <521> = 521;
        <522> = 522;
        <523> = 523;
        <524> = 524;
        <525> = 525;
        <526> = 526;
        <527> = 527;
        <528> = 528;
        <529> = 529;
        <53> = 53;
        <530> = 530;
        <531> = 531;
        <532> = 532;
        <533> = 533;
        <534> = 534;
        <535> = 535;
        <536> = 536;
        <537> = 537;
        <538> = 538;
        <539> = 539;
        <54> = 54;
        <540> = 540;
        <541> = 541;
        <542> = 542;
        <543> = 543;
        <544> = 544;
        <545> = 545;
        <546> = 546;
        <547> = 547;
        <548> = 548;
        <549> = 549;
        <55> = 55;
        <550> = 550;
        <56> = 56;
        <568> = 568;
        <569> = 569;
        <57> = 57;
        <58> = 58;
        <584> = 584;
        <585> = 585;
        <586> = 586;
        <587> = 587;
        <588> = 588;
        <589> = 589;
        <59> = 59;
        <590> = 590;
        <591> = 591;
        <592> = 592;
        <593> = 593;
        <594> = 594;
        <595> = 595;
        <596> = 596;
        <597> = 597;
        <60> = 60;
        <600> = 600;
        <601> = 601;
        <61> = 61;
        <616> = 616;
        <617> = 617;
        <618> = 618;
        <619> = 619;
        <62> = 62;
        <620> = 620;
        <621> = 621;
        <622> = 622;
        <623> = 623;
        <624> = 624;
        <625> = 625;
        <626> = 626;
        <627> = 627;
        <628> = 628;
        <629> = 629;
        <63> = 63;
        <630> = 630;
        <631> = 631;
        <632> = 632;
        <633> = 633;
        <634> = 634;
        <635> = 635;
        <636> = 636;
        <637> = 637;
        <638> = 638;
        <639> = 639;
        <64> = 64;
        <640> = 640;
        <641> = 641;
        <642> = 642;
        <643> = 643;
        <644> = 644;
        <645> = 645;
        <646> = 646;
        <647> = 647;
        <648> = 648;
        <649> = 649;
        <65> = 65;
        <650> = 650;
        <651> = 651;
        <652> = 652;
        <653> = 653;
        <654> = 654;
        <655> = 655;
        <656> = 656;
        <657> = 657;
        <66> = 66;
        <664> = 664;
        <665> = 665;
        <666> = 666;
        <667> = 667;
        <668> = 668;
        <669> = 669;
        <67> = 67;
        <670> = 670;
        <671> = 671;
        <672> = 672;
        <673> = 673;
        <674> = 674;
        <675> = 675;
        <676> = 676;
        <677> = 677;
        <678> = 678;
        <679> = 679;
        <68> = 68;
        <680> = 680;
        <681> = 681;
        <682> = 682;
        <683> = 683;
        <684> = 684;
        <685> = 685;
        <686> = 686;
        <687> = 687;
        <688> = 688;
        <689> = 689;
        <69> = 69;
        <690> = 690;
        <691> = 691;
        <692> = 692;
        <693> = 693;
        <696> = 696;
        <697> = 697;
        <698> = 698;
        <699> = 699;
        <70> = 70;
        <700> = 700;
        <701> = 701;
        <704> = 704;
        <705> = 705;
        <706> = 706;
        <707> = 707;
        <708> = 708;
        <71> = 71;
        <72> = 72;
        <73> = 73;
        <74> = 74;
        <75> = 75;
        <76> = 76;
        <77> = 77;
        <78> = 78;
        <79> = 79;
        <80> = 80;
        <81> = 81;
        <82> = 82;
        <83> = 83;
        <84> = 84;
        <85> = 85;
        <86> = 86;
        <87> = 87;
        <88> = 88;
        <89> = 89;
        <9> = 9;
        <90> = 90;
        <91> = 91;
        <92> = 92;
        <94> = 94;
        <95> = 95;
        <96> = 96;
        <98> = 98;
        <99> = 99;
        <9999999> = 9999999;
    };

    xkb_types {
        virtual_modifiers Dummy;

        type "type0" {
            modifiers = None;
        };

        type "type1" {
            modifiers = Shift+Mod5;
            map[Shift] = Level2;
            map[Mod5] = Level3;
            map[Shift+Mod5] = Level4;
        };

        type "type10" {
            modifiers = Control;
            map[Control] = Level2;
        };

        type "type2" {
            modifiers = Shift;
            map[Shift] = Level2;
        };

        type "type3" {
            modifiers = Shift+Lock+Mod5;
            map[Shift] = Level2;
            map[Lock] = Level2;
            map[Mod5] = Level3;
            map[Shift+Lock+Mod5] = Level3;
            map[Shift+Mod5] = Level4;
            map[Lock+Mod5] = Level4;
        };

        type "type4" {
            modifiers = Shift+Lock;
            map[Shift] = Level2;
            map[Lock] = Level2;
        };

        type "type5" {
            modifiers = Shift+Lock+Mod5;
            map[Shift] = Level2;
            map[Lock] = Level2;
            map[Mod5] = Level3;
            map[Lock+Mod5] = Level3;
            preserve[Lock+Mod5] = Lock;
            map[Shift+Mod5] = Level4;
            map[Shift+Lock+Mod5] = Level4;
            preserve[Shift+Lock+Mod5] = Lock;
        };

        type "type6" {
            modifiers = Shift+Mod5;
            map[Shift] = Level2;
            map[Mod5] = Level3;
            map[Shift+Mod5] = Level3;
        };

        type "type7" {
            modifiers = Shift+Control+Mod1+Mod5;
            map[Shift] = Level2;
            preserve[Shift] = Shift;
            map[Mod5] = Level3;
            map[Shift+Mod5] = Level4;
            preserve[Shift+Mod5] = Shift;
            map[Control+Mod1] = Level5;
        };

        type "type8" {
            modifiers = Shift+Mod2;
            map[Mod2] = Level2;
        };

        type "type9" {
            modifiers = Mod1;
            map[Mod1] = Level2;
        };
    };

    xkb_compat {
        interpret VoidSymbol {
            repeat = false;
        };
    };

    xkb_symbols {
        modmap Shift { <50> };
        modmap Shift { <62> };
        modmap Control { <105> };
        modmap Control { <37> };
        modmap Mod1 { <204> };
        modmap Mod1 { <64> };
        modmap Mod2 { <77> };
        modmap Mod4 { <133> };
        modmap Mod4 { <134> };
        modmap Mod4 { <206> };

        key.repeat = true;

        key <1> {
            groupsClamp = true,
            type[Group1] = "type0",
            symbols[Group1] = [ a ]
        };
        key <10> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 1, exclam, onesuperior, exclamdown ],
            symbols[Group2] = [ 1, exclam ]
        };
        key <100> {
            type[Group1] = "type0",
            symbols[Group1] = [ Henkan_Mode ]
        };
        key <101> {
            type[Group1] = "type0",
            symbols[Group1] = [ Hiragana_Katakana ]
        };
        key <102> {
            type[Group1] = "type0",
            symbols[Group1] = [ Muhenkan ]
        };
        key <104> {
            type[Group1] = "type0",
            symbols[Group1] = [ KP_Enter ]
        };
        key <105> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Control_R ]
        };
        key <106> {
            type[Group1] = "type7",
            symbols[Group1] = [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86Ungrab ]
        };
        key <107> {
            type[Group1] = "type9",
            symbols[Group1] = [ Print, Sys_Req ]
        };
        key <108> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ ISO_Level3_Shift ]
        };
        key <109> {
            type[Group1] = "type0",
            symbols[Group1] = [ Linefeed ]
        };
        key <11> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 2, at, twosuperior, dead_doubleacute ],
            symbols[Group2] = [ 2, at ]
        };
        key <110> {
            type[Group1] = "type0",
            symbols[Group1] = [ Home ]
        };
        key <111> {
            type[Group1] = "type0",
            symbols[Group1] = [ Up ]
        };
        key <112> {
            type[Group1] = "type0",
            symbols[Group1] = [ Prior ]
        };
        key <113> {
            type[Group1] = "type0",
            symbols[Group1] = [ Left ]
        };
        key <114> {
            type[Group1] = "type0",
            symbols[Group1] = [ Right ]
        };
        key <115> {
            type[Group1] = "type0",
            symbols[Group1] = [ End ]
        };
        key <116> {
            type[Group1] = "type0",
            symbols[Group1] = [ Down ]
        };
        key <117> {
            type[Group1] = "type0",
            symbols[Group1] = [ Next ]
        };
        key <118> {
            type[Group1] = "type0",
            symbols[Group1] = [ Insert ]
        };
        key <119> {
            type[Group1] = "type0",
            symbols[Group1] = [ Delete ]
        };
        key <12> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 3, numbersign, threesuperior, dead_macron ],
            symbols[Group2] = [ 3, numbersign ]
        };
        key <121> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioMute ]
        };
        key <122> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioLowerVolume ]
        };
        key <123> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioRaiseVolume ]
        };
        key <124> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86PowerOff ]
        };
        key <125> {
            type[Group1] = "type0",
            symbols[Group1] = [ KP_Equal ]
        };
        key <126> {
            type[Group1] = "type0",
            symbols[Group1] = [ plusminus ]
        };
        key <127> {
            type[Group1] = "type10",
            symbols[Group1] = [ Pause, Break ]
        };
        key <128> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LaunchA ]
        };
        key <129> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Decimal, KP_Decimal ]
        };
        key <13> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 4, dollar, currency, sterling ],
            symbols[Group2] = [ 4, dollar ]
        };
        key <130> {
            type[Group1] = "type0",
            symbols[Group1] = [ Hangul ]
        };
        key <131> {
            type[Group1] = "type0",
            symbols[Group1] = [ Hangul_Hanja ]
        };
        key <133> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Super_L ]
        };
        key <134> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Super_R ]
        };
        key <135> {
            type[Group1] = "type0",
            symbols[Group1] = [ Menu ]
        };
        key <136> {
            type[Group1] = "type0",
            symbols[Group1] = [ Cancel ]
        };
        key <137> {
            type[Group1] = "type0",
            symbols[Group1] = [ Redo ]
        };
        key <138> {
            type[Group1] = "type0",
            symbols[Group1] = [ SunProps ]
        };
        key <139> {
            type[Group1] = "type0",
            symbols[Group1] = [ Undo ]
        };
        key <14> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 5, percent, EuroSign, dead_cedilla ],
            symbols[Group2] = [ 5, percent ]
        };
        key <140> {
            type[Group1] = "type0",
            symbols[Group1] = [ SunFront ]
        };
        key <141> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Copy ]
        };
        key <142> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Open ]
        };
        key <143> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Paste ]
        };
        key <144> {
            type[Group1] = "type0",
            symbols[Group1] = [ Find ]
        };
        key <145> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Cut ]
        };
        key <146> {
            type[Group1] = "type0",
            symbols[Group1] = [ Help ]
        };
        key <147> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MenuKB ]
        };
        key <148> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Calculator ]
        };
        key <15> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 6, asciicircum, dead_circumflex, onequarter ],
            symbols[Group2] = [ 6, asciicircum ]
        };
        key <150> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Sleep ]
        };
        key <151> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WakeUp ]
        };
        key <152> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Explorer ]
        };
        key <153> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Send ]
        };
        key <155> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Xfer ]
        };
        key <156> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch1 ]
        };
        key <157> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch2 ]
        };
        key <158> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WWW ]
        };
        key <159> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86DOS ]
        };
        key <16> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 7, ampersand, dead_horn, onehalf ],
            symbols[Group2] = [ 7, ampersand ]
        };
        key <160> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ScreenSaver ]
        };
        key <161> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RotateWindows ]
        };
        key <162> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TaskPane ]
        };
        key <163> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Mail ]
        };
        key <164> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Favorites ]
        };
        key <165> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MyComputer ]
        };
        key <166> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Back ]
        };
        key <167> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Forward ]
        };
        key <169> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Eject ]
        };
        key <17> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 8, asterisk, dead_ogonek, threequarters ],
            symbols[Group2] = [ 8, asterisk ]
        };
        key <170> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Eject ]
        };
        key <171> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioNext ]
        };
        key <172> {
            type[Group1] = "type2",
            symbols[Group1] = [ XF86AudioPlay, XF86AudioPause ]
        };
        key <173> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioPrev ]
        };
        key <174> {
            type[Group1] = "type2",
            symbols[Group1] = [ XF86AudioStop, XF86Eject ]
        };
        key <175> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioRecord ]
        };
        key <176> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioRewind ]
        };
        key <177> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Phone ]
        };
        key <179> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Tools ]
        };
        key <18> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 9, parenleft, leftsinglequotemark, dead_breve ],
            symbols[Group2] = [ 9, parenleft ]
        };
        key <180> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86HomePage ]
        };
        key <181> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Reload ]
        };
        key <182> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Close ]
        };
        key <185> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ScrollUp ]
        };
        key <186> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ScrollDown ]
        };
        key <187> {
            type[Group1] = "type0",
            symbols[Group1] = [ parenleft ]
        };
        key <188> {
            type[Group1] = "type0",
            symbols[Group1] = [ parenright ]
        };
        key <189> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86New ]
        };
        key <19> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ 0, parenright, rightsinglequotemark, dead_abovering ],
            symbols[Group2] = [ 0, parenright ]
        };
        key <190> {
            type[Group1] = "type0",
            symbols[Group1] = [ Redo ]
        };
        key <191> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Tools ]
        };
        key <192> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch5 ]
        };
        key <193> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch6 ]
        };
        key <194> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch7 ]
        };
        key <195> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch8 ]
        };
        key <196> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch9 ]
        };
        key <198> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioMicMute ]
        };
        key <199> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadToggle ]
        };
        key <2> {
            groupsRedirect = Group2,
            type[Group1] = "type0",
            type[Group2] = "type0",
            symbols[Group1] = [ a ],
            symbols[Group2] = [ a ]
        };
        key <20> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ minus, underscore, yen, dead_belowdot ],
            symbols[Group2] = [ minus, underscore ]
        };
        key <200> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadOn ]
        };
        key <201> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadOff ]
        };
        key <203> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ ISO_Level5_Shift ]
        };
        key <204> {
            repeat = false,
            type[Group1] = "type2",
            symbols[Group1] = [ NoSymbol, Alt_L ]
        };
        key <205> {
            repeat = false,
            type[Group1] = "type2",
            symbols[Group1] = [ NoSymbol, Meta_L ]
        };
        key <206> {
            repeat = false,
            type[Group1] = "type2",
            symbols[Group1] = [ NoSymbol, Super_L ]
        };
        key <207> {
            repeat = false,
            type[Group1] = "type2",
            symbols[Group1] = [ NoSymbol, Hyper_L ]
        };
        key <208> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioPlay ]
        };
        key <209> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioPause ]
        };
        key <21> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ equal, plus, multiply, division ],
            symbols[Group2] = [ equal, plus ]
        };
        key <210> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch3 ]
        };
        key <211> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Launch4 ]
        };
        key <212> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LaunchB ]
        };
        key <213> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Suspend ]
        };
        key <214> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Close ]
        };
        key <215> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioPlay ]
        };
        key <216> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioForward ]
        };
        key <218> {
            type[Group1] = "type0",
            symbols[Group1] = [ Print ]
        };
        key <22> {
            type[Group1] = "type2",
            symbols[Group1] = [ BackSpace, BackSpace ]
        };
        key <220> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WebCam ]
        };
        key <221> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioPreset ]
        };
        key <223> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Mail ]
        };
        key <224> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Messenger ]
        };
        key <225> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Search ]
        };
        key <226> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Go ]
        };
        key <227> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Finance ]
        };
        key <228> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Game ]
        };
        key <229> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Shop ]
        };
        key <23> {
            type[Group1] = "type2",
            symbols[Group1] = [ Tab, ISO_Left_Tab ]
        };
        key <231> {
            type[Group1] = "type0",
            symbols[Group1] = [ Cancel ]
        };
        key <232> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MonBrightnessDown ]
        };
        key <233> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MonBrightnessUp ]
        };
        key <234> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioMedia ]
        };
        key <235> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Display ]
        };
        key <236> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLightOnOff ]
        };
        key <237> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdBrightnessDown ]
        };
        key <238> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdBrightnessUp ]
        };
        key <239> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Send ]
        };
        key <24> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ q, Q, adiaeresis, Adiaeresis ],
            symbols[Group2] = [ q, Q ]
        };
        key <240> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Reply ]
        };
        key <241> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MailForward ]
        };
        key <242> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Save ]
        };
        key <243> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Documents ]
        };
        key <244> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Battery ]
        };
        key <245> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Bluetooth ]
        };
        key <246> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WLAN ]
        };
        key <247> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86UWB ]
        };
        key <249> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Next_VMode ]
        };
        key <25> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ w, W, aring, Aring ],
            symbols[Group2] = [ w, W ]
        };
        key <250> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Prev_VMode ]
        };
        key <251> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MonBrightnessCycle ]
        };
        key <252> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86BrightnessAuto ]
        };
        key <253> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86DisplayOff ]
        };
        key <254> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WWAN ]
        };
        key <255> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RFKill ]
        };
        key <256> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioMicMute ]
        };
        key <26> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ e, E, eacute, Eacute ],
            symbols[Group2] = [ e, E ]
        };
        key <27> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ r, R, ediaeresis, Ediaeresis ],
            symbols[Group2] = [ r, R ]
        };
        key <28> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ t, T, thorn, THORN ],
            symbols[Group2] = [ t, T ]
        };
        key <29> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ y, Y, udiaeresis, Udiaeresis ],
            symbols[Group2] = [ y, Y ]
        };
        key <30> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ u, U, uacute, Uacute ],
            symbols[Group2] = [ u, U ]
        };
        key <31> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ i, I, iacute, Iacute ],
            symbols[Group2] = [ i, I ]
        };
        key <32> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ o, O, oacute, Oacute ],
            symbols[Group2] = [ o, O ]
        };
        key <33> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ p, P, odiaeresis, Odiaeresis ],
            symbols[Group2] = [ p, P ]
        };
        key <34> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ bracketleft, braceleft, guillemotleft, leftdoublequotemark ],
            symbols[Group2] = [ bracketleft, braceleft ]
        };
        key <35> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ bracketright, braceright, guillemotright, rightdoublequotemark ],
            symbols[Group2] = [ bracketright, braceright ]
        };
        key <36> {
            type[Group1] = "type0",
            symbols[Group1] = [ Return ]
        };
        key <366> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Info ]
        };
        key <37> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Control_L ]
        };
        key <372> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Favorites ]
        };
        key <379> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CycleAngle ]
        };
        key <38> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ a, A, aacute, Aacute ],
            symbols[Group2] = [ a, A ]
        };
        key <380> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FullScreen ]
        };
        key <382> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Keyboard ]
        };
        key <383> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AspectRatio ]
        };
        key <39> {
            type[Group1] = "type5",
            type[Group2] = "type4",
            symbols[Group1] = [ s, S, ssharp, section ],
            symbols[Group2] = [ s, S ]
        };
        key <397> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86DVD ]
        };
        key <40> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ d, D, eth, ETH ],
            symbols[Group2] = [ d, D ]
        };
        key <400> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Audio ]
        };
        key <401> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Video ]
        };
        key <405> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Calendar ]
        };
        key <41> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ f, F, f, F ],
            symbols[Group2] = [ f, F ]
        };
        key <410> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ChannelUp ]
        };
        key <411> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ChannelDown ]
        };
        key <418> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioRandomPlay ]
        };
        key <419> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Break ]
        };
        key <42> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ g, G, g, G ],
            symbols[Group2] = [ g, G ]
        };
        key <424> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86VideoPhone ]
        };
        key <425> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Game ]
        };
        key <426> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ZoomIn ]
        };
        key <427> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ZoomOut ]
        };
        key <428> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ZoomReset ]
        };
        key <429> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Word ]
        };
        key <43> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ h, H, h, H ],
            symbols[Group2] = [ h, H ]
        };
        key <430> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Editor ]
        };
        key <431> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Excel ]
        };
        key <432> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86GraphicsEditor ]
        };
        key <433> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Presentation ]
        };
        key <434> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Database ]
        };
        key <435> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86News ]
        };
        key <436> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Voicemail ]
        };
        key <437> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Addressbook ]
        };
        key <438> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Messenger ]
        };
        key <439> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86DisplayToggle ]
        };
        key <44> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ j, J, idiaeresis, Idiaeresis ],
            symbols[Group2] = [ j, J ]
        };
        key <440> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86SpellCheck ]
        };
        key <441> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LogOff ]
        };
        key <442> {
            type[Group1] = "type0",
            symbols[Group1] = [ dollar ]
        };
        key <443> {
            type[Group1] = "type0",
            symbols[Group1] = [ EuroSign ]
        };
        key <444> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FrameBack ]
        };
        key <445> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FrameForward ]
        };
        key <446> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ContextMenu ]
        };
        key <447> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MediaRepeat ]
        };
        key <448> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF8610ChannelsUp ]
        };
        key <449> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF8610ChannelsDown ]
        };
        key <45> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ k, K, oe, OE ],
            symbols[Group2] = [ k, K ]
        };
        key <450> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Images ]
        };
        key <452> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NotificationCenter ]
        };
        key <453> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86PickupPhone ]
        };
        key <454> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86HangupPhone ]
        };
        key <46> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ l, L, oslash, Oslash ],
            symbols[Group2] = [ l, L ]
        };
        key <47> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ semicolon, colon, paragraph, degree ],
            symbols[Group2] = [ semicolon, colon ]
        };
        key <472> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Fn ]
        };
        key <473> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Fn_Esc ]
        };
        key <48> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ apostrophe, quotedbl, dead_acute, dead_diaeresis ],
            symbols[Group2] = [ apostrophe, quotedbl ]
        };
        key <49> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ grave, asciitilde, dead_grave, dead_tilde ],
            symbols[Group2] = [ grave, asciitilde ]
        };
        key <493> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FnRightShift ]
        };
        key <50> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Shift_L ]
        };
        key <505> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_1 ]
        };
        key <506> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_2 ]
        };
        key <507> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_3 ]
        };
        key <508> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_4 ]
        };
        key <509> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_5 ]
        };
        key <51> {
            repeat = false,
            type[Group1] = "type6",
            type[Group2] = "type2",
            symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Latch ],
            symbols[Group2] = [ backslash, bar ]
        };
        key <510> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_6 ]
        };
        key <511> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_7 ]
        };
        key <512> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_8 ]
        };
        key <513> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_9 ]
        };
        key <514> {
            type[Group1] = "type0",
            symbols[Group1] = [ braille_dot_1 ]
        };
        key <52> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ z, Z, ae, AE ],
            symbols[Group2] = [ z, Z ]
        };
        key <520> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric0 ]
        };
        key <521> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric1 ]
        };
        key <522> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric2 ]
        };
        key <523> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric3 ]
        };
        key <524> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric4 ]
        };
        key <525> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric5 ]
        };
        key <526> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric6 ]
        };
        key <527> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric7 ]
        };
        key <528> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric8 ]
        };
        key <529> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric9 ]
        };
        key <53> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ x, X, oe, OE ],
            symbols[Group2] = [ x, X ]
        };
        key <530> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericStar ]
        };
        key <531> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericPound ]
        };
        key <532> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericA ]
        };
        key <533> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericB ]
        };
        key <534> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericC ]
        };
        key <535> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NumericD ]
        };
        key <536> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraFocus ]
        };
        key <537> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86WPSButton ]
        };
        key <538> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadToggle ]
        };
        key <539> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadOn ]
        };
        key <54> {
            type[Group1] = "type5",
            type[Group2] = "type4",
            symbols[Group1] = [ c, C, copyright, cent ],
            symbols[Group2] = [ c, C ]
        };
        key <540> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TouchpadOff ]
        };
        key <541> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraZoomIn ]
        };
        key <542> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraZoomOut ]
        };
        key <543> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraUp ]
        };
        key <544> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraDown ]
        };
        key <545> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraLeft ]
        };
        key <546> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraRight ]
        };
        key <547> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AttendantOn ]
        };
        key <548> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AttendantOff ]
        };
        key <549> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AttendantToggle ]
        };
        key <55> {
            type[Group1] = "type5",
            type[Group2] = "type4",
            symbols[Group1] = [ v, V, registered, trademark ],
            symbols[Group2] = [ v, V ]
        };
        key <550> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LightsToggle ]
        };
        key <56> {
            type[Group1] = "type5",
            type[Group2] = "type4",
            symbols[Group1] = [ b, B, periodcentered, dead_stroke ],
            symbols[Group2] = [ b, B ]
        };
        key <568> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ALSToggle ]
        };
        key <569> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RotationLockToggle ]
        };
        key <57> {
            type[Group1] = "type3",
            type[Group2] = "type4",
            symbols[Group1] = [ n, N, ntilde, Ntilde ],
            symbols[Group2] = [ n, N ]
        };
        key <58> {
            type[Group1] = "type5",
            type[Group2] = "type4",
            symbols[Group1] = [ m, M, mu, plusminus ],
            symbols[Group2] = [ m, M ]
        };
        key <584> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Buttonconfig ]
        };
        key <585> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Taskmanager ]
        };
        key <586> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Journal ]
        };
        key <587> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ControlPanel ]
        };
        key <588> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AppSelect ]
        };
        key <589> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Screensaver ]
        };
        key <59> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ comma, less, ccedilla, Ccedilla ],
            symbols[Group2] = [ comma, less ]
        };
        key <590> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86VoiceCommand ]
        };
        key <591> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Assistant ]
        };
        key <592> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ ISO_Next_Group ]
        };
        key <593> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86EmojiPicker ]
        };
        key <594> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Dictate ]
        };
        key <595> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraAccessEnable ]
        };
        key <596> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraAccessDisable ]
        };
        key <597> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86CameraAccessToggle ]
        };
        key <60> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ period, greater, dead_abovedot, dead_caron ],
            symbols[Group2] = [ period, greater ]
        };
        key <600> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86BrightnessMin ]
        };
        key <601> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86BrightnessMax ]
        };
        key <61> {
            type[Group1] = "type1",
            type[Group2] = "type2",
            symbols[Group1] = [ slash, question, questiondown, dead_hook ],
            symbols[Group2] = [ slash, question ]
        };
        key <616> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdInputAssistPrev ]
        };
        key <617> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdInputAssistNext ]
        };
        key <618> {
            repeat = false
        };
        key <619> {
            repeat = false
        };
        key <62> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Shift_R ]
        };
        key <620> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdInputAssistAccept ]
        };
        key <621> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdInputAssistCancel ]
        };
        key <622> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RightUp ]
        };
        key <623> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RightDown ]
        };
        key <624> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LeftUp ]
        };
        key <625> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86LeftDown ]
        };
        key <626> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RootMenu ]
        };
        key <627> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MediaTopMenu ]
        };
        key <628> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric11 ]
        };
        key <629> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Numeric12 ]
        };
        key <63> {
            type[Group1] = "type7",
            symbols[Group1] = [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86ClearGrab ]
        };
        key <630> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AudioDesc ]
        };
        key <631> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF863DMode ]
        };
        key <632> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NextFavorite ]
        };
        key <633> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86StopRecord ]
        };
        key <634> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86PauseRecord ]
        };
        key <635> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86VOD ]
        };
        key <636> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Unmute ]
        };
        key <637> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FastReverse ]
        };
        key <638> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86SlowReverse ]
        };
        key <639> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Data ]
        };
        key <64> {
            repeat = false,
            type[Group1] = "type2",
            symbols[Group1] = [ Alt_L, Meta_L ]
        };
        key <640> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86OnScreenKeyboard ]
        };
        key <641> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86PrivacyScreenToggle ]
        };
        key <642> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86SelectiveScreenshot ]
        };
        key <643> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NextElement ]
        };
        key <644> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86PreviousElement ]
        };
        key <645> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86AutopilotEngageToggle ]
        };
        key <646> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MarkWaypoint ]
        };
        key <647> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Sos ]
        };
        key <648> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NavChart ]
        };
        key <649> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86FishingChart ]
        };
        key <65> {
            type[Group1] = "type0",
            symbols[Group1] = [ space ]
        };
        key <650> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86SingleRangeRadar ]
        };
        key <651> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86DualRangeRadar ]
        };
        key <652> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86RadarOverlay ]
        };
        key <653> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86TraditionalSonar ]
        };
        key <654> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86ClearvuSonar ]
        };
        key <655> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86SidevuSonar ]
        };
        key <656> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86NavInfo ]
        };
        key <657> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86BrightnessAdjust ]
        };
        key <66> {
            repeat = false,
            type[Group1] = "type6",
            symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Latch ]
        };
        key <664> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro1 ]
        };
        key <665> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro2 ]
        };
        key <666> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro3 ]
        };
        key <667> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro4 ]
        };
        key <668> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro5 ]
        };
        key <669> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro6 ]
        };
        key <67> {
            type[Group1] = "type7",
            symbols[Group1] = [ F1, F1, F1, F1, XF86Switch_VT_1 ]
        };
        key <670> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro7 ]
        };
        key <671> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro8 ]
        };
        key <672> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro9 ]
        };
        key <673> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro10 ]
        };
        key <674> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro11 ]
        };
        key <675> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro12 ]
        };
        key <676> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro13 ]
        };
        key <677> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro14 ]
        };
        key <678> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro15 ]
        };
        key <679> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro16 ]
        };
        key <68> {
            type[Group1] = "type7",
            symbols[Group1] = [ F2, F2, F2, F2, XF86Switch_VT_2 ]
        };
        key <680> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro17 ]
        };
        key <681> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro18 ]
        };
        key <682> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro19 ]
        };
        key <683> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro20 ]
        };
        key <684> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro21 ]
        };
        key <685> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro22 ]
        };
        key <686> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro23 ]
        };
        key <687> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro24 ]
        };
        key <688> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro25 ]
        };
        key <689> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro26 ]
        };
        key <69> {
            type[Group1] = "type7",
            symbols[Group1] = [ F3, F3, F3, F3, XF86Switch_VT_3 ]
        };
        key <690> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro27 ]
        };
        key <691> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro28 ]
        };
        key <692> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro29 ]
        };
        key <693> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86Macro30 ]
        };
        key <696> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroRecordStart ]
        };
        key <697> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroRecordStop ]
        };
        key <698> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroPresetCycle ]
        };
        key <699> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroPreset1 ]
        };
        key <70> {
            type[Group1] = "type7",
            symbols[Group1] = [ F4, F4, F4, F4, XF86Switch_VT_4 ]
        };
        key <700> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroPreset2 ]
        };
        key <701> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86MacroPreset3 ]
        };
        key <704> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLcdMenu1 ]
        };
        key <705> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLcdMenu2 ]
        };
        key <706> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLcdMenu3 ]
        };
        key <707> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLcdMenu4 ]
        };
        key <708> {
            type[Group1] = "type0",
            symbols[Group1] = [ XF86KbdLcdMenu5 ]
        };
        key <71> {
            type[Group1] = "type7",
            symbols[Group1] = [ F5, F5, F5, F5, XF86Switch_VT_5 ]
        };
        key <72> {
            type[Group1] = "type7",
            symbols[Group1] = [ F6, F6, F6, F6, XF86Switch_VT_6 ]
        };
        key <73> {
            type[Group1] = "type7",
            symbols[Group1] = [ F7, F7, F7, F7, XF86Switch_VT_7 ]
        };
        key <74> {
            type[Group1] = "type7",
            symbols[Group1] = [ F8, F8, F8, F8, XF86Switch_VT_8 ]
        };
        key <75> {
            type[Group1] = "type7",
            symbols[Group1] = [ F9, F9, F9, F9, XF86Switch_VT_9 ]
        };
        key <76> {
            type[Group1] = "type7",
            symbols[Group1] = [ F10, F10, F10, F10, XF86Switch_VT_10 ]
        };
        key <77> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ Num_Lock ]
        };
        key <78> {
            type[Group1] = "type0",
            symbols[Group1] = [ Scroll_Lock ]
        };
        key <79> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Home, KP_7 ]
        };
        key <80> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Up, KP_8 ]
        };
        key <81> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Prior, KP_9 ]
        };
        key <82> {
            type[Group1] = "type7",
            symbols[Group1] = [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86Prev_VMode ]
        };
        key <83> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Left, KP_4 ]
        };
        key <84> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Begin, KP_5 ]
        };
        key <85> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Right, KP_6 ]
        };
        key <86> {
            type[Group1] = "type7",
            symbols[Group1] = [ KP_Add, KP_Add, KP_Add, KP_Add, XF86Next_VMode ]
        };
        key <87> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_End, KP_1 ]
        };
        key <88> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Down, KP_2 ]
        };
        key <89> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Next, KP_3 ]
        };
        key <9> {
            type[Group1] = "type0",
            symbols[Group1] = [ Escape ]
        };
        key <90> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Insert, KP_0 ]
        };
        key <91> {
            type[Group1] = "type8",
            symbols[Group1] = [ KP_Delete, KP_Decimal ]
        };
        key <92> {
            repeat = false,
            type[Group1] = "type0",
            symbols[Group1] = [ ISO_Level3_Shift ]
        };
        key <94> {
            type[Group1] = "type1",
            symbols[Group1] = [ backslash, bar, backslash, bar ]
        };
        key <95> {
            type[Group1] = "type7",
            symbols[Group1] = [ F11, F11, F11, F11, XF86Switch_VT_11 ]
        };
        key <96> {
            type[Group1] = "type7",
            symbols[Group1] = [ F12, F12, F12, F12, XF86Switch_VT_12 ]
        };
        key <98> {
            type[Group1] = "type0",
            symbols[Group1] = [ Katakana ]
        };
        key <99> {
            type[Group1] = "type0",
            symbols[Group1] = [ Hiragana ]
        };
        key <9999999> {
            type[Group1] = "type0",
            symbols[Group1] = [ Hiragana ]
        };
    };
};
