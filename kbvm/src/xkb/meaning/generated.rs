use super::*;

pub(super) const LONGEST: usize = 25;

#[derive(Copy, Clone, Eq, PartialEq, Debug)]
pub(crate) enum Meaning {
    __Unknown,
    Accel,
    Accelerate,
    AccessXFeedback,
    AccessXKeys,
    AccessXTimeout,
    Action,
    ActionMessage,
    Actions,
    Affect,
    Alias,
    All,
    AllOf,
    Allowexplicit,
    Allownone,
    ALPHABETIC,
    AlphanumericKeys,
    Alternate,
    AlternateGroup,
    Any,
    Anylevel,
    AnyOf,
    AnyOfOrNone,
    AudibleBell,
    Augment,
    AutoRepeat,
    Base,
    Both,
    BounceKeys,
    Button,
    Clampgroups,
    ClearLocks,
    Clearmodifiers,
    Clearmods,
    Compat,
    Control,
    Controls,
    Count,
    Ctrls,
    Data,
    Default,
    Defaultbutton,
    Dev,
    DevBtn,
    DevButton,
    Device,
    DeviceBtn,
    DeviceButton,
    DeviceVal,
    DeviceValuator,
    DevVal,
    DevValuator,
    Dfltbtn,
    Driveskbd,
    Driveskeyboard,
    Effective,
    Exactly,
    False,
    FOUR_LEVEL,
    FOUR_LEVEL_ALPHABETIC,
    FOUR_LEVEL_KEYPAD,
    FOUR_LEVEL_SEMIALPHABETIC,
    FunctionKeys,
    GenerateKeyEvent,
    GenKeyEvent,
    Group,
    Groupname,
    Groups,
    Groupsclamp,
    Groupsredirect,
    Groupswrap,
    Hidden,
    IgnoreGroupLock,
    Include,
    Increment,
    Index,
    Indicator,
    Indicatordriveskbd,
    Indicatordriveskeyboard,
    Interpret,
    ISOLock,
    Kc,
    Key,
    Keycode,
    KEYPAD,
    KeypadKeys,
    Keys,
    Latched,
    LatchGroup,
    LatchMods,
    LatchToLock,
    Leddriveskbd,
    Leddriveskeyboard,
    Level1,
    LevelName,
    Levelname,
    Levelone,
    Lock,
    LockControls,
    LockDevBtn,
    LockDevButton,
    LockDeviceBtn,
    LockDeviceButton,
    Locked,
    LockGroup,
    Locking,
    LockMods,
    LockPointerBtn,
    LockPointerButton,
    LockPtrBtn,
    LockPtrButton,
    Locks,
    Logo,
    Map,
    Maximum,
    Message,
    MessageAction,
    Minimum,
    Mod1,
    Mod2,
    Mod3,
    Mod4,
    Mod5,
    ModifierKeys,
    ModifierMap,
    Modifiers,
    ModMap,
    Modmap,
    Modmapmods,
    Mods,
    MouseKeys,
    MouseKeysAccel,
    MovePointer,
    MovePtr,
    Name,
    Neither,
    No,
    NoAction,
    None,
    NoneOf,
    Nosymbol,
    Off,
    On,
    ONE_LEVEL,
    Outline,
    Overlay,
    Overlay1,
    Overlay2,
    Override,
    Partial,
    Permanentradiogroup,
    PointerButton,
    Preserve,
    Private,
    PtrBtn,
    Radiogroup,
    Redirect,
    Redirectgroups,
    RedirectKey,
    Repeat,
    Repeating,
    RepeatKeys,
    Repeats,
    Replace,
    Report,
    Row,
    Same,
    SameServer,
    Screen,
    Section,
    SetControls,
    SetGroup,
    SetMods,
    SetPointerDefault,
    SetPtrDflt,
    Shape,
    Shift,
    SlowKeys,
    Solid,
    StickyKeys,
    SwitchScreen,
    Symbols,
    Terminate,
    TerminateServer,
    Text,
    True,
    TWO_LEVEL,
    Type,
    Unlock,
    Usemodmap,
    Usemodmapmods,
    Value,
    Virtual,
    Virtualmod,
    Virtualmodifier,
    VirtualModifiers,
    Virtualmodifiers,
    Virtualmods,
    Vmods,
    Voidsymbol,
    Whichgroupstate,
    Whichmodifierstate,
    Whichmodstate,
    Wrapgroups,
    X,
    XkbCompat,
    XkbCompatibility,
    XkbCompatibilityMap,
    XkbCompatMap,
    XkbGeometry,
    XkbKeycodes,
    XkbKeymap,
    XkbLayout,
    XkbSemantics,
    XkbSymbols,
    XkbTypes,
    Y,
    Yes,
}

impl Meaning {
    pub(crate) fn name(self) -> &'static str {
        match self {
            Self::__Unknown => "__Unknown",
            Self::Accel => "accel",
            Self::Accelerate => "accelerate",
            Self::AccessXFeedback => "AccessXFeedback",
            Self::AccessXKeys => "AccessXKeys",
            Self::AccessXTimeout => "AccessXTimeout",
            Self::Action => "action",
            Self::ActionMessage => "ActionMessage",
            Self::Actions => "actions",
            Self::Affect => "affect",
            Self::Alias => "alias",
            Self::All => "all",
            Self::AllOf => "AllOf",
            Self::Allowexplicit => "allowexplicit",
            Self::Allownone => "allownone",
            Self::ALPHABETIC => "ALPHABETIC",
            Self::AlphanumericKeys => "alphanumeric_keys",
            Self::Alternate => "alternate",
            Self::AlternateGroup => "alternate_group",
            Self::Any => "any",
            Self::Anylevel => "anylevel",
            Self::AnyOf => "AnyOf",
            Self::AnyOfOrNone => "AnyOfOrNone",
            Self::AudibleBell => "AudibleBell",
            Self::Augment => "augment",
            Self::AutoRepeat => "AutoRepeat",
            Self::Base => "base",
            Self::Both => "both",
            Self::BounceKeys => "BounceKeys",
            Self::Button => "button",
            Self::Clampgroups => "clampgroups",
            Self::ClearLocks => "clearLocks",
            Self::Clearmodifiers => "clearmodifiers",
            Self::Clearmods => "clearmods",
            Self::Compat => "compat",
            Self::Control => "Control",
            Self::Controls => "controls",
            Self::Count => "count",
            Self::Ctrls => "ctrls",
            Self::Data => "data",
            Self::Default => "default",
            Self::Defaultbutton => "defaultbutton",
            Self::Dev => "dev",
            Self::DevBtn => "DevBtn",
            Self::DevButton => "DevButton",
            Self::Device => "device",
            Self::DeviceBtn => "DeviceBtn",
            Self::DeviceButton => "DeviceButton",
            Self::DeviceVal => "DeviceVal",
            Self::DeviceValuator => "DeviceValuator",
            Self::DevVal => "DevVal",
            Self::DevValuator => "DevValuator",
            Self::Dfltbtn => "dfltbtn",
            Self::Driveskbd => "driveskbd",
            Self::Driveskeyboard => "driveskeyboard",
            Self::Effective => "effective",
            Self::Exactly => "Exactly",
            Self::False => "false",
            Self::FOUR_LEVEL => "FOUR_LEVEL",
            Self::FOUR_LEVEL_ALPHABETIC => "FOUR_LEVEL_ALPHABETIC",
            Self::FOUR_LEVEL_KEYPAD => "FOUR_LEVEL_KEYPAD",
            Self::FOUR_LEVEL_SEMIALPHABETIC => "FOUR_LEVEL_SEMIALPHABETIC",
            Self::FunctionKeys => "function_keys",
            Self::GenerateKeyEvent => "generateKeyEvent",
            Self::GenKeyEvent => "genKeyEvent",
            Self::Group => "group",
            Self::Groupname => "groupname",
            Self::Groups => "groups",
            Self::Groupsclamp => "groupsclamp",
            Self::Groupsredirect => "groupsredirect",
            Self::Groupswrap => "groupswrap",
            Self::Hidden => "hidden",
            Self::IgnoreGroupLock => "IgnoreGroupLock",
            Self::Include => "include",
            Self::Increment => "increment",
            Self::Index => "index",
            Self::Indicator => "indicator",
            Self::Indicatordriveskbd => "indicatordriveskbd",
            Self::Indicatordriveskeyboard => "indicatordriveskeyboard",
            Self::Interpret => "interpret",
            Self::ISOLock => "ISOLock",
            Self::Kc => "kc",
            Self::Key => "key",
            Self::Keycode => "keycode",
            Self::KEYPAD => "KEYPAD",
            Self::KeypadKeys => "keypad_keys",
            Self::Keys => "keys",
            Self::Latched => "latched",
            Self::LatchGroup => "LatchGroup",
            Self::LatchMods => "LatchMods",
            Self::LatchToLock => "latchToLock",
            Self::Leddriveskbd => "leddriveskbd",
            Self::Leddriveskeyboard => "leddriveskeyboard",
            Self::Level1 => "level1",
            Self::LevelName => "level_name",
            Self::Levelname => "levelname",
            Self::Levelone => "levelone",
            Self::Lock => "Lock",
            Self::LockControls => "LockControls",
            Self::LockDevBtn => "LockDevBtn",
            Self::LockDevButton => "LockDevButton",
            Self::LockDeviceBtn => "LockDeviceBtn",
            Self::LockDeviceButton => "LockDeviceButton",
            Self::Locked => "locked",
            Self::LockGroup => "LockGroup",
            Self::Locking => "locking",
            Self::LockMods => "LockMods",
            Self::LockPointerBtn => "LockPointerBtn",
            Self::LockPointerButton => "LockPointerButton",
            Self::LockPtrBtn => "LockPtrBtn",
            Self::LockPtrButton => "LockPtrButton",
            Self::Locks => "locks",
            Self::Logo => "logo",
            Self::Map => "map",
            Self::Maximum => "maximum",
            Self::Message => "Message",
            Self::MessageAction => "MessageAction",
            Self::Minimum => "minimum",
            Self::Mod1 => "Mod1",
            Self::Mod2 => "Mod2",
            Self::Mod3 => "Mod3",
            Self::Mod4 => "Mod4",
            Self::Mod5 => "Mod5",
            Self::ModifierKeys => "modifier_keys",
            Self::ModifierMap => "modifier_map",
            Self::Modifiers => "modifiers",
            Self::ModMap => "mod_map",
            Self::Modmap => "modmap",
            Self::Modmapmods => "modmapmods",
            Self::Mods => "mods",
            Self::MouseKeys => "MouseKeys",
            Self::MouseKeysAccel => "MouseKeysAccel",
            Self::MovePointer => "MovePointer",
            Self::MovePtr => "MovePtr",
            Self::Name => "name",
            Self::Neither => "neither",
            Self::No => "no",
            Self::NoAction => "NoAction",
            Self::None => "none",
            Self::NoneOf => "NoneOf",
            Self::Nosymbol => "nosymbol",
            Self::Off => "off",
            Self::On => "on",
            Self::ONE_LEVEL => "ONE_LEVEL",
            Self::Outline => "outline",
            Self::Overlay => "overlay",
            Self::Overlay1 => "Overlay1",
            Self::Overlay2 => "Overlay2",
            Self::Override => "override",
            Self::Partial => "partial",
            Self::Permanentradiogroup => "permanentradiogroup",
            Self::PointerButton => "PointerButton",
            Self::Preserve => "preserve",
            Self::Private => "Private",
            Self::PtrBtn => "PtrBtn",
            Self::Radiogroup => "radiogroup",
            Self::Redirect => "Redirect",
            Self::Redirectgroups => "redirectgroups",
            Self::RedirectKey => "RedirectKey",
            Self::Repeat => "repeat",
            Self::Repeating => "repeating",
            Self::RepeatKeys => "RepeatKeys",
            Self::Repeats => "repeats",
            Self::Replace => "replace",
            Self::Report => "report",
            Self::Row => "row",
            Self::Same => "same",
            Self::SameServer => "sameServer",
            Self::Screen => "screen",
            Self::Section => "section",
            Self::SetControls => "SetControls",
            Self::SetGroup => "SetGroup",
            Self::SetMods => "SetMods",
            Self::SetPointerDefault => "SetPointerDefault",
            Self::SetPtrDflt => "SetPtrDflt",
            Self::Shape => "shape",
            Self::Shift => "Shift",
            Self::SlowKeys => "SlowKeys",
            Self::Solid => "solid",
            Self::StickyKeys => "StickyKeys",
            Self::SwitchScreen => "SwitchScreen",
            Self::Symbols => "symbols",
            Self::Terminate => "Terminate",
            Self::TerminateServer => "TerminateServer",
            Self::Text => "text",
            Self::True => "true",
            Self::TWO_LEVEL => "TWO_LEVEL",
            Self::Type => "type",
            Self::Unlock => "unlock",
            Self::Usemodmap => "usemodmap",
            Self::Usemodmapmods => "usemodmapmods",
            Self::Value => "value",
            Self::Virtual => "virtual",
            Self::Virtualmod => "virtualmod",
            Self::Virtualmodifier => "virtualmodifier",
            Self::VirtualModifiers => "virtual_modifiers",
            Self::Virtualmodifiers => "virtualmodifiers",
            Self::Virtualmods => "virtualmods",
            Self::Vmods => "vmods",
            Self::Voidsymbol => "voidsymbol",
            Self::Whichgroupstate => "whichgroupstate",
            Self::Whichmodifierstate => "whichmodifierstate",
            Self::Whichmodstate => "whichmodstate",
            Self::Wrapgroups => "wrapgroups",
            Self::X => "x",
            Self::XkbCompat => "xkb_compat",
            Self::XkbCompatibility => "xkb_compatibility",
            Self::XkbCompatibilityMap => "xkb_compatibility_map",
            Self::XkbCompatMap => "xkb_compat_map",
            Self::XkbGeometry => "xkb_geometry",
            Self::XkbKeycodes => "xkb_keycodes",
            Self::XkbKeymap => "xkb_keymap",
            Self::XkbLayout => "xkb_layout",
            Self::XkbSemantics => "xkb_semantics",
            Self::XkbSymbols => "xkb_symbols",
            Self::XkbTypes => "xkb_types",
            Self::Y => "y",
            Self::Yes => "yes",
        }
    }

    pub(super) fn lowercase(self) -> &'static str {
        match self {
            Self::__Unknown => "__Unknown",
            Self::Accel => "accel",
            Self::Accelerate => "accelerate",
            Self::AccessXFeedback => "accessxfeedback",
            Self::AccessXKeys => "accessxkeys",
            Self::AccessXTimeout => "accessxtimeout",
            Self::Action => "action",
            Self::ActionMessage => "actionmessage",
            Self::Actions => "actions",
            Self::Affect => "affect",
            Self::Alias => "alias",
            Self::All => "all",
            Self::AllOf => "allof",
            Self::Allowexplicit => "allowexplicit",
            Self::Allownone => "allownone",
            Self::ALPHABETIC => "alphabetic",
            Self::AlphanumericKeys => "alphanumeric_keys",
            Self::Alternate => "alternate",
            Self::AlternateGroup => "alternate_group",
            Self::Any => "any",
            Self::Anylevel => "anylevel",
            Self::AnyOf => "anyof",
            Self::AnyOfOrNone => "anyofornone",
            Self::AudibleBell => "audiblebell",
            Self::Augment => "augment",
            Self::AutoRepeat => "autorepeat",
            Self::Base => "base",
            Self::Both => "both",
            Self::BounceKeys => "bouncekeys",
            Self::Button => "button",
            Self::Clampgroups => "clampgroups",
            Self::ClearLocks => "clearlocks",
            Self::Clearmodifiers => "clearmodifiers",
            Self::Clearmods => "clearmods",
            Self::Compat => "compat",
            Self::Control => "control",
            Self::Controls => "controls",
            Self::Count => "count",
            Self::Ctrls => "ctrls",
            Self::Data => "data",
            Self::Default => "default",
            Self::Defaultbutton => "defaultbutton",
            Self::Dev => "dev",
            Self::DevBtn => "devbtn",
            Self::DevButton => "devbutton",
            Self::Device => "device",
            Self::DeviceBtn => "devicebtn",
            Self::DeviceButton => "devicebutton",
            Self::DeviceVal => "deviceval",
            Self::DeviceValuator => "devicevaluator",
            Self::DevVal => "devval",
            Self::DevValuator => "devvaluator",
            Self::Dfltbtn => "dfltbtn",
            Self::Driveskbd => "driveskbd",
            Self::Driveskeyboard => "driveskeyboard",
            Self::Effective => "effective",
            Self::Exactly => "exactly",
            Self::False => "false",
            Self::FOUR_LEVEL => "four_level",
            Self::FOUR_LEVEL_ALPHABETIC => "four_level_alphabetic",
            Self::FOUR_LEVEL_KEYPAD => "four_level_keypad",
            Self::FOUR_LEVEL_SEMIALPHABETIC => "four_level_semialphabetic",
            Self::FunctionKeys => "function_keys",
            Self::GenerateKeyEvent => "generatekeyevent",
            Self::GenKeyEvent => "genkeyevent",
            Self::Group => "group",
            Self::Groupname => "groupname",
            Self::Groups => "groups",
            Self::Groupsclamp => "groupsclamp",
            Self::Groupsredirect => "groupsredirect",
            Self::Groupswrap => "groupswrap",
            Self::Hidden => "hidden",
            Self::IgnoreGroupLock => "ignoregrouplock",
            Self::Include => "include",
            Self::Increment => "increment",
            Self::Index => "index",
            Self::Indicator => "indicator",
            Self::Indicatordriveskbd => "indicatordriveskbd",
            Self::Indicatordriveskeyboard => "indicatordriveskeyboard",
            Self::Interpret => "interpret",
            Self::ISOLock => "isolock",
            Self::Kc => "kc",
            Self::Key => "key",
            Self::Keycode => "keycode",
            Self::KEYPAD => "keypad",
            Self::KeypadKeys => "keypad_keys",
            Self::Keys => "keys",
            Self::Latched => "latched",
            Self::LatchGroup => "latchgroup",
            Self::LatchMods => "latchmods",
            Self::LatchToLock => "latchtolock",
            Self::Leddriveskbd => "leddriveskbd",
            Self::Leddriveskeyboard => "leddriveskeyboard",
            Self::Level1 => "level1",
            Self::LevelName => "level_name",
            Self::Levelname => "levelname",
            Self::Levelone => "levelone",
            Self::Lock => "lock",
            Self::LockControls => "lockcontrols",
            Self::LockDevBtn => "lockdevbtn",
            Self::LockDevButton => "lockdevbutton",
            Self::LockDeviceBtn => "lockdevicebtn",
            Self::LockDeviceButton => "lockdevicebutton",
            Self::Locked => "locked",
            Self::LockGroup => "lockgroup",
            Self::Locking => "locking",
            Self::LockMods => "lockmods",
            Self::LockPointerBtn => "lockpointerbtn",
            Self::LockPointerButton => "lockpointerbutton",
            Self::LockPtrBtn => "lockptrbtn",
            Self::LockPtrButton => "lockptrbutton",
            Self::Locks => "locks",
            Self::Logo => "logo",
            Self::Map => "map",
            Self::Maximum => "maximum",
            Self::Message => "message",
            Self::MessageAction => "messageaction",
            Self::Minimum => "minimum",
            Self::Mod1 => "mod1",
            Self::Mod2 => "mod2",
            Self::Mod3 => "mod3",
            Self::Mod4 => "mod4",
            Self::Mod5 => "mod5",
            Self::ModifierKeys => "modifier_keys",
            Self::ModifierMap => "modifier_map",
            Self::Modifiers => "modifiers",
            Self::ModMap => "mod_map",
            Self::Modmap => "modmap",
            Self::Modmapmods => "modmapmods",
            Self::Mods => "mods",
            Self::MouseKeys => "mousekeys",
            Self::MouseKeysAccel => "mousekeysaccel",
            Self::MovePointer => "movepointer",
            Self::MovePtr => "moveptr",
            Self::Name => "name",
            Self::Neither => "neither",
            Self::No => "no",
            Self::NoAction => "noaction",
            Self::None => "none",
            Self::NoneOf => "noneof",
            Self::Nosymbol => "nosymbol",
            Self::Off => "off",
            Self::On => "on",
            Self::ONE_LEVEL => "one_level",
            Self::Outline => "outline",
            Self::Overlay => "overlay",
            Self::Overlay1 => "overlay1",
            Self::Overlay2 => "overlay2",
            Self::Override => "override",
            Self::Partial => "partial",
            Self::Permanentradiogroup => "permanentradiogroup",
            Self::PointerButton => "pointerbutton",
            Self::Preserve => "preserve",
            Self::Private => "private",
            Self::PtrBtn => "ptrbtn",
            Self::Radiogroup => "radiogroup",
            Self::Redirect => "redirect",
            Self::Redirectgroups => "redirectgroups",
            Self::RedirectKey => "redirectkey",
            Self::Repeat => "repeat",
            Self::Repeating => "repeating",
            Self::RepeatKeys => "repeatkeys",
            Self::Repeats => "repeats",
            Self::Replace => "replace",
            Self::Report => "report",
            Self::Row => "row",
            Self::Same => "same",
            Self::SameServer => "sameserver",
            Self::Screen => "screen",
            Self::Section => "section",
            Self::SetControls => "setcontrols",
            Self::SetGroup => "setgroup",
            Self::SetMods => "setmods",
            Self::SetPointerDefault => "setpointerdefault",
            Self::SetPtrDflt => "setptrdflt",
            Self::Shape => "shape",
            Self::Shift => "shift",
            Self::SlowKeys => "slowkeys",
            Self::Solid => "solid",
            Self::StickyKeys => "stickykeys",
            Self::SwitchScreen => "switchscreen",
            Self::Symbols => "symbols",
            Self::Terminate => "terminate",
            Self::TerminateServer => "terminateserver",
            Self::Text => "text",
            Self::True => "true",
            Self::TWO_LEVEL => "two_level",
            Self::Type => "type",
            Self::Unlock => "unlock",
            Self::Usemodmap => "usemodmap",
            Self::Usemodmapmods => "usemodmapmods",
            Self::Value => "value",
            Self::Virtual => "virtual",
            Self::Virtualmod => "virtualmod",
            Self::Virtualmodifier => "virtualmodifier",
            Self::VirtualModifiers => "virtual_modifiers",
            Self::Virtualmodifiers => "virtualmodifiers",
            Self::Virtualmods => "virtualmods",
            Self::Vmods => "vmods",
            Self::Voidsymbol => "voidsymbol",
            Self::Whichgroupstate => "whichgroupstate",
            Self::Whichmodifierstate => "whichmodifierstate",
            Self::Whichmodstate => "whichmodstate",
            Self::Wrapgroups => "wrapgroups",
            Self::X => "x",
            Self::XkbCompat => "xkb_compat",
            Self::XkbCompatibility => "xkb_compatibility",
            Self::XkbCompatibilityMap => "xkb_compatibility_map",
            Self::XkbCompatMap => "xkb_compat_map",
            Self::XkbGeometry => "xkb_geometry",
            Self::XkbKeycodes => "xkb_keycodes",
            Self::XkbKeymap => "xkb_keymap",
            Self::XkbLayout => "xkb_layout",
            Self::XkbSemantics => "xkb_semantics",
            Self::XkbSymbols => "xkb_symbols",
            Self::XkbTypes => "xkb_types",
            Self::Y => "y",
            Self::Yes => "yes",
        }
    }
}

pub(super) static LOWERCASE_TO_MEANING: PhfMap<[u8], Meaning> = PhfMap {
    key: 12913932095322966823,
    disps: &[(0, 1), (0, 53), (0, 12), (0, 4), (0, 62), (0, 60), (0, 0), (0, 0), (0, 2), (0, 206), (0, 43), (0, 6), (0, 159), (0, 0), (0, 19), (0, 0), (0, 7), (0, 3), (0, 49), (0, 10), (0, 0), (0, 1), (0, 0), (0, 14), (0, 194), (0, 1), (0, 1), (0, 10), (0, 39), (0, 145), (0, 12), (0, 15), (1, 16), (0, 0), (0, 129), (1, 142), (0, 35), (2, 174), (0, 149), (0, 24), (0, 1), (0, 48), (1, 10), (0, 4), (0, 13), (0, 42), (0, 15), (0, 27), (0, 141), (0, 53), (0, 3), (0, 34), (0, 8), (0, 202), (0, 167), (0, 0), (0, 33), (1, 130), (0, 63), (0, 165), (0, 22), (0, 153), (0, 40), (0, 165)],
    map: &[Meaning::Mod3, Meaning::Overlay, Meaning::Maximum, Meaning::RedirectKey, Meaning::Solid, Meaning::DevVal, Meaning::Lock, Meaning::BounceKeys, Meaning::XkbSemantics, Meaning::Shift, Meaning::Locks, Meaning::Y, Meaning::Index, Meaning::Mod1, Meaning::SetControls, Meaning::Repeats, Meaning::Groupswrap, Meaning::Usemodmapmods, Meaning::Driveskbd, Meaning::Overlay2, Meaning::Virtualmodifiers, Meaning::Both, Meaning::LatchMods, Meaning::PointerButton, Meaning::Allowexplicit, Meaning::Screen, Meaning::DevButton, Meaning::Groupname, Meaning::Dev, Meaning::Mod4, Meaning::LockDevButton, Meaning::Usemodmap, Meaning::AudibleBell, Meaning::SetMods, Meaning::Leddriveskbd, Meaning::Action, Meaning::MovePointer, Meaning::Dfltbtn, Meaning::Message, Meaning::Affect, Meaning::Partial, Meaning::Defaultbutton, Meaning::DeviceVal, Meaning::DeviceBtn, Meaning::Shape, Meaning::AccessXFeedback, Meaning::Replace, Meaning::XkbCompat, Meaning::Private, Meaning::Indicator, Meaning::DeviceValuator, Meaning::Repeating, Meaning::FunctionKeys, Meaning::DevValuator, Meaning::AlphanumericKeys, Meaning::Preserve, Meaning::Keycode, Meaning::False, Meaning::Virtualmod, Meaning::Same, Meaning::ONE_LEVEL, Meaning::Indicatordriveskbd, Meaning::Symbols, Meaning::Data, Meaning::XkbCompatibilityMap, Meaning::Device, Meaning::Level1, Meaning::Mod2, Meaning::Exactly, Meaning::FOUR_LEVEL, Meaning::Levelone, Meaning::VirtualModifiers, Meaning::ModMap, Meaning::GenKeyEvent, Meaning::XkbKeymap, Meaning::Vmods, Meaning::Nosymbol, Meaning::Yes, Meaning::Alias, Meaning::FOUR_LEVEL_KEYPAD, Meaning::AutoRepeat, Meaning::Value, Meaning::Outline, Meaning::Name, Meaning::Indicatordriveskeyboard, Meaning::StickyKeys, Meaning::ModifierKeys, Meaning::Anylevel, Meaning::Whichgroupstate, Meaning::True, Meaning::Radiogroup, Meaning::XkbLayout, Meaning::Unlock, Meaning::AnyOf, Meaning::MouseKeysAccel, Meaning::X, Meaning::Redirectgroups, Meaning::KEYPAD, Meaning::ALPHABETIC, Meaning::LockPointerButton, Meaning::Modmapmods, Meaning::LevelName, Meaning::No, Meaning::LatchGroup, Meaning::FOUR_LEVEL_SEMIALPHABETIC, Meaning::Hidden, Meaning::Override, Meaning::MovePtr, Meaning::LockPtrButton, Meaning::AlternateGroup, Meaning::LockDeviceBtn, Meaning::SwitchScreen, Meaning::Key, Meaning::Minimum, Meaning::ModifierMap, Meaning::Virtualmods, Meaning::AccessXTimeout, Meaning::Wrapgroups, Meaning::Virtual, Meaning::Allownone, Meaning::Modmap, Meaning::Report, Meaning::AllOf, Meaning::MouseKeys, Meaning::Type, Meaning::XkbTypes, Meaning::Augment, Meaning::NoAction, Meaning::MessageAction, Meaning::XkbCompatMap, Meaning::IgnoreGroupLock, Meaning::XkbKeycodes, Meaning::Modifiers, Meaning::LockDeviceButton, Meaning::SetPtrDflt, Meaning::LockDevBtn, Meaning::Terminate, Meaning::Off, Meaning::Interpret, Meaning::Redirect, Meaning::Clampgroups, Meaning::Kc, Meaning::Button, Meaning::XkbSymbols, Meaning::Base, Meaning::Actions, Meaning::Accel, Meaning::Alternate, Meaning::SlowKeys, Meaning::Locked, Meaning::All, Meaning::Clearmods, Meaning::Default, Meaning::Count, Meaning::Include, Meaning::Mod5, Meaning::Control, Meaning::Driveskeyboard, Meaning::Groups, Meaning::NoneOf, Meaning::Virtualmodifier, Meaning::ClearLocks, Meaning::Effective, Meaning::Levelname, Meaning::Locking, Meaning::TerminateServer, Meaning::Whichmodifierstate, Meaning::RepeatKeys, Meaning::Compat, Meaning::LockGroup, Meaning::Group, Meaning::Map, Meaning::LockMods, Meaning::Groupsclamp, Meaning::ISOLock, Meaning::Mods, Meaning::Repeat, Meaning::Controls, Meaning::Text, Meaning::AccessXKeys, Meaning::On, Meaning::Whichmodstate, Meaning::LockPointerBtn, Meaning::TWO_LEVEL, Meaning::AnyOfOrNone, Meaning::LockPtrBtn, Meaning::KeypadKeys, Meaning::Row, Meaning::LatchToLock, Meaning::None, Meaning::SetGroup, Meaning::ActionMessage, Meaning::Groupsredirect, Meaning::Clearmodifiers, Meaning::Leddriveskeyboard, Meaning::Neither, Meaning::Keys, Meaning::Voidsymbol, Meaning::DevBtn, Meaning::Latched, Meaning::DeviceButton, Meaning::PtrBtn, Meaning::FOUR_LEVEL_ALPHABETIC, Meaning::XkbCompatibility, Meaning::SetPointerDefault, Meaning::Any, Meaning::Ctrls, Meaning::XkbGeometry, Meaning::Overlay1, Meaning::Increment, Meaning::Logo, Meaning::Accelerate, Meaning::Section, Meaning::SameServer, Meaning::Permanentradiogroup, Meaning::LockControls, Meaning::GenerateKeyEvent],
    _phantom: core::marker::PhantomData,
};

pub(super) static STRING_TO_MEANING: PhfMap<[u8], Meaning> = PhfMap {
    key: 12913932095322966823,
    disps: &[(0, 1), (0, 15), (0, 0), (0, 137), (0, 51), (0, 117), (0, 15), (0, 6), (0, 67), (0, 27), (0, 1), (0, 0), (0, 53), (0, 1), (0, 137), (0, 23), (0, 3), (0, 4), (0, 2), (0, 0), (0, 109), (0, 0), (0, 5), (0, 5), (0, 6), (0, 70), (0, 0), (0, 5), (0, 215), (0, 6), (0, 7), (0, 36), (0, 22), (0, 1), (0, 0), (0, 170), (0, 0), (0, 172), (1, 2), (1, 147), (0, 26), (1, 4), (0, 9), (0, 156), (0, 1), (0, 11), (0, 168), (0, 64), (0, 27), (0, 48), (0, 4), (0, 124), (1, 138), (0, 30), (0, 82), (0, 38), (6, 67), (0, 89), (1, 195), (0, 165), (0, 213), (0, 206), (0, 0), (18, 69)],
    map: &[Meaning::LatchGroup, Meaning::SwitchScreen, Meaning::Keys, Meaning::Lock, Meaning::DeviceValuator, Meaning::SetPointerDefault, Meaning::DevBtn, Meaning::LockDeviceBtn, Meaning::XkbSemantics, Meaning::DevButton, Meaning::AccessXKeys, Meaning::Report, Meaning::FOUR_LEVEL_KEYPAD, Meaning::AnyOfOrNone, Meaning::Text, Meaning::Groupswrap, Meaning::ActionMessage, Meaning::Y, Meaning::Dev, Meaning::SameServer, Meaning::Row, Meaning::Usemodmap, Meaning::Both, Meaning::FOUR_LEVEL, Meaning::PtrBtn, Meaning::Terminate, Meaning::Overlay, Meaning::ISOLock, Meaning::SetPtrDflt, Meaning::LockPtrBtn, Meaning::Voidsymbol, Meaning::SetControls, Meaning::Driveskeyboard, Meaning::Same, Meaning::SetGroup, Meaning::XkbSymbols, Meaning::MovePointer, Meaning::AutoRepeat, Meaning::Affect, Meaning::Accelerate, Meaning::Indicator, Meaning::DevVal, Meaning::FunctionKeys, Meaning::Mods, Meaning::Mod5, Meaning::Shape, Meaning::Preserve, Meaning::XkbKeycodes, Meaning::XkbCompat, Meaning::Accel, Meaning::None, Meaning::AllOf, Meaning::NoneOf, Meaning::Any, Meaning::AccessXTimeout, Meaning::Allownone, Meaning::LockGroup, Meaning::False, Meaning::Virtualmodifiers, Meaning::Overlay1, Meaning::AlphanumericKeys, Meaning::Solid, Meaning::Data, Meaning::XkbCompatibilityMap, Meaning::XkbCompatMap, Meaning::Level1, Meaning::VirtualModifiers, Meaning::ModMap, Meaning::Virtualmods, Meaning::True, Meaning::XkbKeymap, Meaning::IgnoreGroupLock, Meaning::Key, Meaning::ALPHABETIC, Meaning::ONE_LEVEL, Meaning::Vmods, Meaning::Levelone, Meaning::Nosymbol, Meaning::Yes, Meaning::RedirectKey, Meaning::Unlock, Meaning::Outline, Meaning::Value, Meaning::StickyKeys, Meaning::Leddriveskbd, Meaning::Indicatordriveskeyboard, Meaning::XkbLayout, Meaning::ModifierKeys, Meaning::Control, Meaning::LevelName, Meaning::Locks, Meaning::MovePtr, Meaning::Modifiers, Meaning::Alias, Meaning::On, Meaning::Increment, Meaning::X, Meaning::AlternateGroup, Meaning::MouseKeysAccel, Meaning::Symbols, Meaning::Overlay2, Meaning::DevValuator, Meaning::AccessXFeedback, Meaning::No, Meaning::Name, Meaning::Actions, Meaning::Hidden, Meaning::Groupsredirect, Meaning::Wrapgroups, Meaning::ModifierMap, Meaning::FOUR_LEVEL_SEMIALPHABETIC, Meaning::Button, Meaning::Allowexplicit, Meaning::Virtualmodifier, Meaning::BounceKeys, Meaning::XkbTypes, Meaning::Levelname, Meaning::Virtual, Meaning::Group, Meaning::GenerateKeyEvent, Meaning::LockDevButton, Meaning::Keycode, Meaning::Locking, Meaning::Index, Meaning::Anylevel, Meaning::Action, Meaning::Off, Meaning::Augment, Meaning::MessageAction, Meaning::Mod4, Meaning::Partial, Meaning::Clearmodifiers, Meaning::Base, Meaning::LockPointerButton, Meaning::Device, Meaning::Modmap, Meaning::Virtualmod, Meaning::DeviceButton, Meaning::NoAction, Meaning::Clampgroups, Meaning::Default, Meaning::Redirectgroups, Meaning::Minimum, Meaning::LockMods, Meaning::Override, Meaning::Groupname, Meaning::GenKeyEvent, Meaning::Clearmods, Meaning::Interpret, Meaning::Locked, Meaning::Defaultbutton, Meaning::Mod1, Meaning::Shift, Meaning::Whichgroupstate, Meaning::Logo, Meaning::Include, Meaning::KEYPAD, Meaning::Screen, Meaning::Mod3, Meaning::Radiogroup, Meaning::Repeating, Meaning::Map, Meaning::Effective, Meaning::XkbCompatibility, Meaning::LatchMods, Meaning::Whichmodifierstate, Meaning::Leddriveskeyboard, Meaning::LatchToLock, Meaning::Groupsclamp, Meaning::Type, Meaning::Dfltbtn, Meaning::Private, Meaning::Indicatordriveskbd, Meaning::Groups, Meaning::Compat, Meaning::Mod2, Meaning::Repeat, Meaning::Maximum, Meaning::Controls, Meaning::TWO_LEVEL, Meaning::DeviceVal, Meaning::Section, Meaning::Whichmodstate, Meaning::SlowKeys, Meaning::DeviceBtn, Meaning::Alternate, Meaning::AudibleBell, Meaning::SetMods, Meaning::All, Meaning::Redirect, Meaning::Neither, Meaning::Kc, Meaning::MouseKeys, Meaning::Exactly, Meaning::Latched, Meaning::Modmapmods, Meaning::Replace, Meaning::LockPointerBtn, Meaning::RepeatKeys, Meaning::Usemodmapmods, Meaning::Driveskbd, Meaning::Ctrls, Meaning::LockControls, Meaning::LockDeviceButton, Meaning::ClearLocks, Meaning::PointerButton, Meaning::Count, Meaning::KeypadKeys, Meaning::XkbGeometry, Meaning::LockPtrButton, Meaning::Repeats, Meaning::Message, Meaning::LockDevBtn, Meaning::TerminateServer, Meaning::FOUR_LEVEL_ALPHABETIC, Meaning::Permanentradiogroup, Meaning::AnyOf],
    _phantom: core::marker::PhantomData,
};
